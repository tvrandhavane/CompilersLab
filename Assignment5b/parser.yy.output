
Production Rules
(rule precedences determined from %prec or 1st terminal between parentheses):
1: program ->  optional_declaration_list procedure_name procedure_body
2: optional_declaration_list ->  <empty>
3: optional_declaration_list ->  declaration_statement_list
4: procedure_name (NAME) ->  NAME '(' ')'
5: procedure_body ('{') ->  '{' declaration_statement_list #0001 basic_block_list '}'
6: #0001 ->  <empty>
7: procedure_body ('{') ->  '{' basic_block_list '}'
8: declaration_statement_list ->  declaration_statement
9: declaration_statement_list ->  declaration_statement_list declaration_statement
10: declaration_statement (INTEGER) ->  INTEGER NAME ';'
11: basic_block_list ->  basic_block_list basic_block
12: basic_block_list ->  basic_block
13: basic_block (BBNUM) ->  BBNUM ':' executable_statement_list
14: executable_statement_list ->  assignment_statement_list
15: executable_statement_list (RETURN) ->  assignment_statement_list RETURN ';'
16: executable_statement_list ->  assignment_statement_list if_else_statement
17: executable_statement_list ->  assignment_statement_list goto_statement
18: assignment_statement_list ->  <empty>
19: assignment_statement_list ->  assignment_statement_list assignment_statement
20: assignment_statement (ASSIGN_OP) ->  variable ASSIGN_OP expression ';'
21: if_else_statement (IF) ->  IF '(' relational_expression ')' goto_statement ELSE goto_statement
22: goto_statement (GOTO) ->  GOTO BBNUM ';'
23: relational_expression (eq) ->  expression eq expression
24: relational_expression (ne) ->  expression ne expression
25: relational_expression (le) ->  expression le expression
26: relational_expression (ge) ->  expression ge expression
27: relational_expression (lt) ->  expression lt expression
28: relational_expression (gt) ->  expression gt expression
29: expression ->  variable_or_constant
30: expression ->  relational_expression
31: expression ('(') ->  '(' relational_expression ')'
32: variable_or_constant ->  variable
33: variable_or_constant ->  constant
34: variable (NAME) ->  NAME
35: constant (INTEGER_NUMBER) ->  INTEGER_NUMBER
36: program_$ ->  program


Symbolic Terminal tokens:
       error
       EOF
   257: INTEGER_NUMBER
   258: BBNUM
   259: NAME
   260: RETURN
   261: INTEGER
   262: IF
   263: ELSE
   264: GOTO
   265: ASSIGN_OP
   266: ne
   267: eq
   268: lt
   269: le
   270: gt
   271: ge
    40: '('
    41: ')'
   123: '{'
   125: '}'
    59: ';'
    58: ':'


Grammar States: 
State 0:
36: program_$ ->  . program 
  0:   On program to state 1
  1:   On optional_declaration_list to state 2
  2:   On declaration_statement_list to state 3
  3:   On declaration_statement to state 4
  4:   On INTEGER to state 5
  Reduce by 2: optional_declaration_list ->  . 


State 1:
36: program_$ -> program  . 


State 2:
1: program -> optional_declaration_list  . procedure_name procedure_body 
  0:   On procedure_name to state 6
  1:   On NAME to state 7


State 3:
3: optional_declaration_list -> declaration_statement_list  . 
9: declaration_statement_list -> declaration_statement_list  . declaration_statement 
  0:   On declaration_statement to state 8
  1:   On INTEGER to state 5
  Reduce by 3: optional_declaration_list -> declaration_statement_list  . 


State 4:
8: declaration_statement_list -> declaration_statement  . 
  Reduce by 8: declaration_statement_list -> declaration_statement  . 


State 5:
10: declaration_statement -> INTEGER  . NAME ';' 
  0:   On NAME to state 9


State 6:
1: program -> optional_declaration_list procedure_name  . procedure_body 
  0:   On procedure_body to state 10
  1:   On '{' to state 11


State 7:
4: procedure_name -> NAME  . '(' ')' 
  0:   On '(' to state 12


State 8:
9: declaration_statement_list -> declaration_statement_list declaration_statement  . 
  Reduce by 9: declaration_statement_list -> declaration_statement_list declaration_statement  . 


State 9:
10: declaration_statement -> INTEGER NAME  . ';' 
  0:   On ';' to state 13


State 10:
1: program -> optional_declaration_list procedure_name procedure_body  . 
  Reduce by 1: program -> optional_declaration_list procedure_name procedure_body  . 


State 11:
5: procedure_body -> '{'  . declaration_statement_list #0001 basic_block_list '}' 
7: procedure_body -> '{'  . basic_block_list '}' 
  0:   On declaration_statement_list to state 14
  1:   On basic_block_list to state 15
  2:   On declaration_statement to state 4
  3:   On basic_block to state 16
  4:   On INTEGER to state 5
  5:   On BBNUM to state 17


State 12:
4: procedure_name -> NAME '('  . ')' 
  0:   On ')' to state 18


State 13:
10: declaration_statement -> INTEGER NAME ';'  . 
  Reduce by 10: declaration_statement -> INTEGER NAME ';'  . 


State 14:
5: procedure_body -> '{' declaration_statement_list  . #0001 basic_block_list '}' 
9: declaration_statement_list -> declaration_statement_list  . declaration_statement 
  0:   On #0001 to state 19
  1:   On declaration_statement to state 8
  2:   On INTEGER to state 5
  Reduce by 6: #0001 ->  . 


State 15:
7: procedure_body -> '{' basic_block_list  . '}' 
11: basic_block_list -> basic_block_list  . basic_block 
  0:   On '}' to state 20
  1:   On basic_block to state 21
  2:   On BBNUM to state 17


State 16:
12: basic_block_list -> basic_block  . 
  Reduce by 12: basic_block_list -> basic_block  . 


State 17:
13: basic_block -> BBNUM  . ':' executable_statement_list 
  0:   On ':' to state 22


State 18:
4: procedure_name -> NAME '(' ')'  . 
  Reduce by 4: procedure_name -> NAME '(' ')'  . 


State 19:
5: procedure_body -> '{' declaration_statement_list #0001  . basic_block_list '}' 
  0:   On basic_block_list to state 23
  1:   On basic_block to state 16
  2:   On BBNUM to state 17


State 20:
7: procedure_body -> '{' basic_block_list '}'  . 
  Reduce by 7: procedure_body -> '{' basic_block_list '}'  . 


State 21:
11: basic_block_list -> basic_block_list basic_block  . 
  Reduce by 11: basic_block_list -> basic_block_list basic_block  . 


State 22:
13: basic_block -> BBNUM ':'  . executable_statement_list 
  0:   On executable_statement_list to state 24
  1:   On assignment_statement_list to state 25
  Reduce by 18: assignment_statement_list ->  . 


State 23:
5: procedure_body -> '{' declaration_statement_list #0001 basic_block_list  . '}' 
11: basic_block_list -> basic_block_list  . basic_block 
  0:   On '}' to state 26
  1:   On basic_block to state 21
  2:   On BBNUM to state 17


State 24:
13: basic_block -> BBNUM ':' executable_statement_list  . 
  Reduce by 13: basic_block -> BBNUM ':' executable_statement_list  . 


State 25:
14: executable_statement_list -> assignment_statement_list  . 
15: executable_statement_list -> assignment_statement_list  . RETURN ';' 
16: executable_statement_list -> assignment_statement_list  . if_else_statement 
17: executable_statement_list -> assignment_statement_list  . goto_statement 
19: assignment_statement_list -> assignment_statement_list  . assignment_statement 
  0:   On RETURN to state 27
  1:   On if_else_statement to state 28
  2:   On goto_statement to state 29
  3:   On assignment_statement to state 30
  4:   On IF to state 31
  5:   On GOTO to state 32
  6:   On variable to state 33
  7:   On NAME to state 34
  Reduce by 14: executable_statement_list -> assignment_statement_list  . 


State 26:
5: procedure_body -> '{' declaration_statement_list #0001 basic_block_list '}'  . 
  Reduce by 5: procedure_body -> '{' declaration_statement_list #0001 basic_block_list '}'  . 


State 27:
15: executable_statement_list -> assignment_statement_list RETURN  . ';' 
  0:   On ';' to state 35


State 28:
16: executable_statement_list -> assignment_statement_list if_else_statement  . 
  Reduce by 16: executable_statement_list -> assignment_statement_list if_else_statement  . 


State 29:
17: executable_statement_list -> assignment_statement_list goto_statement  . 
  Reduce by 17: executable_statement_list -> assignment_statement_list goto_statement  . 


State 30:
19: assignment_statement_list -> assignment_statement_list assignment_statement  . 
  Reduce by 19: assignment_statement_list -> assignment_statement_list assignment_statement  . 


State 31:
21: if_else_statement -> IF  . '(' relational_expression ')' goto_statement ELSE goto_statement 
  0:   On '(' to state 36


State 32:
22: goto_statement -> GOTO  . BBNUM ';' 
  0:   On BBNUM to state 37


State 33:
20: assignment_statement -> variable  . ASSIGN_OP expression ';' 
  0:   On ASSIGN_OP to state 38


State 34:
34: variable -> NAME  . 
  Reduce by 34: variable -> NAME  . 


State 35:
15: executable_statement_list -> assignment_statement_list RETURN ';'  . 
  Reduce by 15: executable_statement_list -> assignment_statement_list RETURN ';'  . 


State 36:
21: if_else_statement -> IF '('  . relational_expression ')' goto_statement ELSE goto_statement 
  0:   On relational_expression to state 39
  1:   On expression to state 40
  2:   On variable_or_constant to state 41
  3:   On '(' to state 42
  4:   On variable to state 43
  5:   On constant to state 44
  6:   On NAME to state 34
  7:   On INTEGER_NUMBER to state 45


State 37:
22: goto_statement -> GOTO BBNUM  . ';' 
  0:   On ';' to state 46


State 38:
20: assignment_statement -> variable ASSIGN_OP  . expression ';' 
  0:   On expression to state 47
  1:   On variable_or_constant to state 41
  2:   On relational_expression to state 48
  3:   On '(' to state 42
  4:   On variable to state 43
  5:   On constant to state 44
  6:   On NAME to state 34
  7:   On INTEGER_NUMBER to state 45


State 39:
21: if_else_statement -> IF '(' relational_expression  . ')' goto_statement ELSE goto_statement 
30: expression -> relational_expression  . 
  0:   On ')' to state 49
  Reduce by 30: expression -> relational_expression  . 


State 40:
23: relational_expression -> expression  . eq expression 
24: relational_expression -> expression  . ne expression 
25: relational_expression -> expression  . le expression 
26: relational_expression -> expression  . ge expression 
27: relational_expression -> expression  . lt expression 
28: relational_expression -> expression  . gt expression 
  0:   On eq to state 50
  1:   On ne to state 51
  2:   On le to state 52
  3:   On ge to state 53
  4:   On lt to state 54
  5:   On gt to state 55


State 41:
29: expression -> variable_or_constant  . 
  Reduce by 29: expression -> variable_or_constant  . 


State 42:
31: expression -> '('  . relational_expression ')' 
  0:   On relational_expression to state 56
  1:   On expression to state 40
  2:   On variable_or_constant to state 41
  3:   On '(' to state 42
  4:   On variable to state 43
  5:   On constant to state 44
  6:   On NAME to state 34
  7:   On INTEGER_NUMBER to state 45


State 43:
32: variable_or_constant -> variable  . 
  Reduce by 32: variable_or_constant -> variable  . 


State 44:
33: variable_or_constant -> constant  . 
  Reduce by 33: variable_or_constant -> constant  . 


State 45:
35: constant -> INTEGER_NUMBER  . 
  Reduce by 35: constant -> INTEGER_NUMBER  . 


State 46:
22: goto_statement -> GOTO BBNUM ';'  . 
  Reduce by 22: goto_statement -> GOTO BBNUM ';'  . 


State 47:
20: assignment_statement -> variable ASSIGN_OP expression  . ';' 
23: relational_expression -> expression  . eq expression 
24: relational_expression -> expression  . ne expression 
25: relational_expression -> expression  . le expression 
26: relational_expression -> expression  . ge expression 
27: relational_expression -> expression  . lt expression 
28: relational_expression -> expression  . gt expression 
  0:   On ';' to state 57
  1:   On eq to state 50
  2:   On ne to state 51
  3:   On le to state 52
  4:   On ge to state 53
  5:   On lt to state 54
  6:   On gt to state 55


State 48:
30: expression -> relational_expression  . 
  Reduce by 30: expression -> relational_expression  . 


State 49:
21: if_else_statement -> IF '(' relational_expression ')'  . goto_statement ELSE goto_statement 
  0:   On goto_statement to state 58
  1:   On GOTO to state 32


State 50:
23: relational_expression -> expression eq  . expression 
  0:   On expression to state 59
  1:   On variable_or_constant to state 41
  2:   On relational_expression to state 48
  3:   On '(' to state 42
  4:   On variable to state 43
  5:   On constant to state 44
  6:   On NAME to state 34
  7:   On INTEGER_NUMBER to state 45


State 51:
24: relational_expression -> expression ne  . expression 
  0:   On expression to state 60
  1:   On variable_or_constant to state 41
  2:   On relational_expression to state 48
  3:   On '(' to state 42
  4:   On variable to state 43
  5:   On constant to state 44
  6:   On NAME to state 34
  7:   On INTEGER_NUMBER to state 45


State 52:
25: relational_expression -> expression le  . expression 
  0:   On expression to state 61
  1:   On variable_or_constant to state 41
  2:   On relational_expression to state 48
  3:   On '(' to state 42
  4:   On variable to state 43
  5:   On constant to state 44
  6:   On NAME to state 34
  7:   On INTEGER_NUMBER to state 45


State 53:
26: relational_expression -> expression ge  . expression 
  0:   On expression to state 62
  1:   On variable_or_constant to state 41
  2:   On relational_expression to state 48
  3:   On '(' to state 42
  4:   On variable to state 43
  5:   On constant to state 44
  6:   On NAME to state 34
  7:   On INTEGER_NUMBER to state 45


State 54:
27: relational_expression -> expression lt  . expression 
  0:   On expression to state 63
  1:   On variable_or_constant to state 41
  2:   On relational_expression to state 48
  3:   On '(' to state 42
  4:   On variable to state 43
  5:   On constant to state 44
  6:   On NAME to state 34
  7:   On INTEGER_NUMBER to state 45


State 55:
28: relational_expression -> expression gt  . expression 
  0:   On expression to state 64
  1:   On variable_or_constant to state 41
  2:   On relational_expression to state 48
  3:   On '(' to state 42
  4:   On variable to state 43
  5:   On constant to state 44
  6:   On NAME to state 34
  7:   On INTEGER_NUMBER to state 45


State 56:
31: expression -> '(' relational_expression  . ')' 
30: expression -> relational_expression  . 
  0:   On ')' to state 65
  Reduce by 30: expression -> relational_expression  . 


State 57:
20: assignment_statement -> variable ASSIGN_OP expression ';'  . 
  Reduce by 20: assignment_statement -> variable ASSIGN_OP expression ';'  . 


State 58:
21: if_else_statement -> IF '(' relational_expression ')' goto_statement  . ELSE goto_statement 
  0:   On ELSE to state 66


State 59:
23: relational_expression -> expression eq expression  . 
23: relational_expression -> expression  . eq expression 
24: relational_expression -> expression  . ne expression 
25: relational_expression -> expression  . le expression 
26: relational_expression -> expression  . ge expression 
27: relational_expression -> expression  . lt expression 
28: relational_expression -> expression  . gt expression 
  0 (removed by precedence):   On eq to state 50
  1 (removed by precedence):   On ne to state 51
  2:   On le to state 52
  3:   On ge to state 53
  4:   On lt to state 54
  5:   On gt to state 55
  Reduce by 23: relational_expression -> expression eq expression  . 


State 60:
24: relational_expression -> expression ne expression  . 
23: relational_expression -> expression  . eq expression 
24: relational_expression -> expression  . ne expression 
25: relational_expression -> expression  . le expression 
26: relational_expression -> expression  . ge expression 
27: relational_expression -> expression  . lt expression 
28: relational_expression -> expression  . gt expression 
  0 (removed by precedence):   On eq to state 50
  1 (removed by precedence):   On ne to state 51
  2:   On le to state 52
  3:   On ge to state 53
  4:   On lt to state 54
  5:   On gt to state 55
  Reduce by 24: relational_expression -> expression ne expression  . 


State 61:
25: relational_expression -> expression le expression  . 
23: relational_expression -> expression  . eq expression 
24: relational_expression -> expression  . ne expression 
25: relational_expression -> expression  . le expression 
26: relational_expression -> expression  . ge expression 
27: relational_expression -> expression  . lt expression 
28: relational_expression -> expression  . gt expression 
  0 (removed by precedence):   On eq to state 50
  1 (removed by precedence):   On ne to state 51
  2 (removed by precedence):   On le to state 52
  3 (removed by precedence):   On ge to state 53
  4 (removed by precedence):   On lt to state 54
  5 (removed by precedence):   On gt to state 55
  Reduce by 25: relational_expression -> expression le expression  . 


State 62:
26: relational_expression -> expression ge expression  . 
23: relational_expression -> expression  . eq expression 
24: relational_expression -> expression  . ne expression 
25: relational_expression -> expression  . le expression 
26: relational_expression -> expression  . ge expression 
27: relational_expression -> expression  . lt expression 
28: relational_expression -> expression  . gt expression 
  0 (removed by precedence):   On eq to state 50
  1 (removed by precedence):   On ne to state 51
  2 (removed by precedence):   On le to state 52
  3 (removed by precedence):   On ge to state 53
  4 (removed by precedence):   On lt to state 54
  5 (removed by precedence):   On gt to state 55
  Reduce by 26: relational_expression -> expression ge expression  . 


State 63:
27: relational_expression -> expression lt expression  . 
23: relational_expression -> expression  . eq expression 
24: relational_expression -> expression  . ne expression 
25: relational_expression -> expression  . le expression 
26: relational_expression -> expression  . ge expression 
27: relational_expression -> expression  . lt expression 
28: relational_expression -> expression  . gt expression 
  0 (removed by precedence):   On eq to state 50
  1 (removed by precedence):   On ne to state 51
  2 (removed by precedence):   On le to state 52
  3 (removed by precedence):   On ge to state 53
  4 (removed by precedence):   On lt to state 54
  5 (removed by precedence):   On gt to state 55
  Reduce by 27: relational_expression -> expression lt expression  . 


State 64:
28: relational_expression -> expression gt expression  . 
23: relational_expression -> expression  . eq expression 
24: relational_expression -> expression  . ne expression 
25: relational_expression -> expression  . le expression 
26: relational_expression -> expression  . ge expression 
27: relational_expression -> expression  . lt expression 
28: relational_expression -> expression  . gt expression 
  0 (removed by precedence):   On eq to state 50
  1 (removed by precedence):   On ne to state 51
  2 (removed by precedence):   On le to state 52
  3 (removed by precedence):   On ge to state 53
  4 (removed by precedence):   On lt to state 54
  5 (removed by precedence):   On gt to state 55
  Reduce by 28: relational_expression -> expression gt expression  . 


State 65:
31: expression -> '(' relational_expression ')'  . 
  Reduce by 31: expression -> '(' relational_expression ')'  . 


State 66:
21: if_else_statement -> IF '(' relational_expression ')' goto_statement ELSE  . goto_statement 
  0:   On goto_statement to state 67
  1:   On GOTO to state 32


State 67:
21: if_else_statement -> IF '(' relational_expression ')' goto_statement ELSE goto_statement  . 
  Reduce by 21: if_else_statement -> IF '(' relational_expression ')' goto_statement ELSE goto_statement  . 



