
Production Rules
(rule precedences determined from %prec or 1st terminal between parentheses):
1: program ->  optional_declaration_list procedure_name procedure_body
2: optional_declaration_list ->  <empty>
3: optional_declaration_list ->  declaration_statement_list
4: procedure_name (NAME) ->  NAME '(' ')'
5: procedure_body ('{') ->  '{' declaration_statement_list #0001 basic_block_list '}'
6: #0001 ->  <empty>
7: procedure_body ('{') ->  '{' basic_block_list '}'
8: declaration_statement_list ->  declaration_statement
9: declaration_statement_list ->  declaration_statement_list declaration_statement
10: declaration_statement (INTEGER) ->  INTEGER NAME ';'
11: declaration_statement (FLOAT) ->  FLOAT NAME ';'
12: basic_block_list ->  basic_block_list basic_block
13: basic_block_list ->  basic_block
14: basic_block (BBNUM) ->  BBNUM ':' executable_statement_list
15: executable_statement_list ->  assignment_statement_list
16: executable_statement_list (RETURN) ->  assignment_statement_list RETURN ';'
17: executable_statement_list ->  assignment_statement_list if_else_statement
18: executable_statement_list ->  assignment_statement_list goto_statement
19: assignment_statement_list ->  <empty>
20: assignment_statement_list ->  assignment_statement_list assignment_statement
21: assignment_statement (ASSIGN_OP) ->  variable ASSIGN_OP expression ';'
22: if_else_statement (IF) ->  IF '(' relational_expression ')' goto_statement ELSE goto_statement
23: goto_statement (GOTO) ->  GOTO BBNUM ';'
24: relational_expression (eq) ->  expression eq expression
25: relational_expression (ne) ->  expression ne expression
26: relational_expression (le) ->  expression le expression
27: relational_expression (ge) ->  expression ge expression
28: relational_expression (lt) ->  expression lt expression
29: relational_expression (gt) ->  expression gt expression
30: expression ->  arithmetic_expression
31: expression ->  relational_expression
32: arithmetic_expression (SUB_OP) ->  SUB_OP variable_or_constant_typecast
33: arithmetic_expression (ADD_OP) ->  arithmetic_expression ADD_OP arithmetic_expression
34: arithmetic_expression (SUB_OP) ->  arithmetic_expression SUB_OP arithmetic_expression
35: arithmetic_expression (MULT_OP) ->  arithmetic_expression MULT_OP arithmetic_expression
36: arithmetic_expression (DIV_OP) ->  arithmetic_expression DIV_OP arithmetic_expression
37: arithmetic_expression ->  variable_or_constant_typecast
38: variable_or_constant_typecast ('(') ->  '(' FLOAT ')' variable_or_constant
39: variable_or_constant_typecast ('(') ->  '(' DOUBLE ')' variable_or_constant
40: variable_or_constant_typecast ('(') ->  '(' INTEGER ')' variable_or_constant
41: variable_or_constant_typecast ->  variable_or_constant
42: variable_or_constant ->  variable
43: variable_or_constant ->  constant
44: variable_or_constant ('(') ->  '(' arithmetic_expression ')'
45: variable_or_constant ('(') ->  '(' relational_expression ')'
46: variable (NAME) ->  NAME
47: constant (INTEGER_NUMBER) ->  INTEGER_NUMBER
48: constant (FLOAT_NUMBER) ->  FLOAT_NUMBER
49: program_$ ->  program


Symbolic Terminal tokens:
       error
       EOF
   257: INTEGER_NUMBER
   258: BBNUM
   259: FLOAT_NUMBER
   260: NAME
   261: RETURN
   262: INTEGER
   263: IF
   264: ELSE
   265: GOTO
   266: ASSIGN_OP
   267: FLOAT
   268: DOUBLE
   269: ne
   270: eq
   271: lt
   272: le
   273: gt
   274: ge
   275: ADD_OP
   276: SUB_OP
   277: MULT_OP
   278: DIV_OP
    40: '('
    41: ')'
   123: '{'
   125: '}'
    59: ';'
    58: ':'


Grammar States: 
State 0:
49: program_$ ->  . program 
  0:   On program to state 1
  1:   On optional_declaration_list to state 2
  2:   On declaration_statement_list to state 3
  3:   On declaration_statement to state 4
  4:   On INTEGER to state 5
  5:   On FLOAT to state 6
  Reduce by 2: optional_declaration_list ->  . 


State 1:
49: program_$ -> program  . 


State 2:
1: program -> optional_declaration_list  . procedure_name procedure_body 
  0:   On procedure_name to state 7
  1:   On NAME to state 8


State 3:
3: optional_declaration_list -> declaration_statement_list  . 
9: declaration_statement_list -> declaration_statement_list  . declaration_statement 
  0:   On declaration_statement to state 9
  1:   On INTEGER to state 5
  2:   On FLOAT to state 6
  Reduce by 3: optional_declaration_list -> declaration_statement_list  . 


State 4:
8: declaration_statement_list -> declaration_statement  . 
  Reduce by 8: declaration_statement_list -> declaration_statement  . 


State 5:
10: declaration_statement -> INTEGER  . NAME ';' 
  0:   On NAME to state 10


State 6:
11: declaration_statement -> FLOAT  . NAME ';' 
  0:   On NAME to state 11


State 7:
1: program -> optional_declaration_list procedure_name  . procedure_body 
  0:   On procedure_body to state 12
  1:   On '{' to state 13


State 8:
4: procedure_name -> NAME  . '(' ')' 
  0:   On '(' to state 14


State 9:
9: declaration_statement_list -> declaration_statement_list declaration_statement  . 
  Reduce by 9: declaration_statement_list -> declaration_statement_list declaration_statement  . 


State 10:
10: declaration_statement -> INTEGER NAME  . ';' 
  0:   On ';' to state 15


State 11:
11: declaration_statement -> FLOAT NAME  . ';' 
  0:   On ';' to state 16


State 12:
1: program -> optional_declaration_list procedure_name procedure_body  . 
  Reduce by 1: program -> optional_declaration_list procedure_name procedure_body  . 


State 13:
5: procedure_body -> '{'  . declaration_statement_list #0001 basic_block_list '}' 
7: procedure_body -> '{'  . basic_block_list '}' 
  0:   On declaration_statement_list to state 17
  1:   On basic_block_list to state 18
  2:   On declaration_statement to state 4
  3:   On basic_block to state 19
  4:   On INTEGER to state 5
  5:   On FLOAT to state 6
  6:   On BBNUM to state 20


State 14:
4: procedure_name -> NAME '('  . ')' 
  0:   On ')' to state 21


State 15:
10: declaration_statement -> INTEGER NAME ';'  . 
  Reduce by 10: declaration_statement -> INTEGER NAME ';'  . 


State 16:
11: declaration_statement -> FLOAT NAME ';'  . 
  Reduce by 11: declaration_statement -> FLOAT NAME ';'  . 


State 17:
5: procedure_body -> '{' declaration_statement_list  . #0001 basic_block_list '}' 
9: declaration_statement_list -> declaration_statement_list  . declaration_statement 
  0:   On #0001 to state 22
  1:   On declaration_statement to state 9
  2:   On INTEGER to state 5
  3:   On FLOAT to state 6
  Reduce by 6: #0001 ->  . 


State 18:
7: procedure_body -> '{' basic_block_list  . '}' 
12: basic_block_list -> basic_block_list  . basic_block 
  0:   On '}' to state 23
  1:   On basic_block to state 24
  2:   On BBNUM to state 20


State 19:
13: basic_block_list -> basic_block  . 
  Reduce by 13: basic_block_list -> basic_block  . 


State 20:
14: basic_block -> BBNUM  . ':' executable_statement_list 
  0:   On ':' to state 25


State 21:
4: procedure_name -> NAME '(' ')'  . 
  Reduce by 4: procedure_name -> NAME '(' ')'  . 


State 22:
5: procedure_body -> '{' declaration_statement_list #0001  . basic_block_list '}' 
  0:   On basic_block_list to state 26
  1:   On basic_block to state 19
  2:   On BBNUM to state 20


State 23:
7: procedure_body -> '{' basic_block_list '}'  . 
  Reduce by 7: procedure_body -> '{' basic_block_list '}'  . 


State 24:
12: basic_block_list -> basic_block_list basic_block  . 
  Reduce by 12: basic_block_list -> basic_block_list basic_block  . 


State 25:
14: basic_block -> BBNUM ':'  . executable_statement_list 
  0:   On executable_statement_list to state 27
  1:   On assignment_statement_list to state 28
  Reduce by 19: assignment_statement_list ->  . 


State 26:
5: procedure_body -> '{' declaration_statement_list #0001 basic_block_list  . '}' 
12: basic_block_list -> basic_block_list  . basic_block 
  0:   On '}' to state 29
  1:   On basic_block to state 24
  2:   On BBNUM to state 20


State 27:
14: basic_block -> BBNUM ':' executable_statement_list  . 
  Reduce by 14: basic_block -> BBNUM ':' executable_statement_list  . 


State 28:
15: executable_statement_list -> assignment_statement_list  . 
16: executable_statement_list -> assignment_statement_list  . RETURN ';' 
17: executable_statement_list -> assignment_statement_list  . if_else_statement 
18: executable_statement_list -> assignment_statement_list  . goto_statement 
20: assignment_statement_list -> assignment_statement_list  . assignment_statement 
  0:   On RETURN to state 30
  1:   On if_else_statement to state 31
  2:   On goto_statement to state 32
  3:   On assignment_statement to state 33
  4:   On IF to state 34
  5:   On GOTO to state 35
  6:   On variable to state 36
  7:   On NAME to state 37
  Reduce by 15: executable_statement_list -> assignment_statement_list  . 


State 29:
5: procedure_body -> '{' declaration_statement_list #0001 basic_block_list '}'  . 
  Reduce by 5: procedure_body -> '{' declaration_statement_list #0001 basic_block_list '}'  . 


State 30:
16: executable_statement_list -> assignment_statement_list RETURN  . ';' 
  0:   On ';' to state 38


State 31:
17: executable_statement_list -> assignment_statement_list if_else_statement  . 
  Reduce by 17: executable_statement_list -> assignment_statement_list if_else_statement  . 


State 32:
18: executable_statement_list -> assignment_statement_list goto_statement  . 
  Reduce by 18: executable_statement_list -> assignment_statement_list goto_statement  . 


State 33:
20: assignment_statement_list -> assignment_statement_list assignment_statement  . 
  Reduce by 20: assignment_statement_list -> assignment_statement_list assignment_statement  . 


State 34:
22: if_else_statement -> IF  . '(' relational_expression ')' goto_statement ELSE goto_statement 
  0:   On '(' to state 39


State 35:
23: goto_statement -> GOTO  . BBNUM ';' 
  0:   On BBNUM to state 40


State 36:
21: assignment_statement -> variable  . ASSIGN_OP expression ';' 
  0:   On ASSIGN_OP to state 41


State 37:
46: variable -> NAME  . 
  Reduce by 46: variable -> NAME  . 


State 38:
16: executable_statement_list -> assignment_statement_list RETURN ';'  . 
  Reduce by 16: executable_statement_list -> assignment_statement_list RETURN ';'  . 


State 39:
22: if_else_statement -> IF '('  . relational_expression ')' goto_statement ELSE goto_statement 
  0:   On relational_expression to state 42
  1:   On expression to state 43
  2:   On arithmetic_expression to state 44
  3:   On SUB_OP to state 45
  4:   On variable_or_constant_typecast to state 46
  5:   On '(' to state 47
  6:   On variable_or_constant to state 48
  7:   On variable to state 49
  8:   On constant to state 50
  9:   On NAME to state 37
  10:   On INTEGER_NUMBER to state 51
  11:   On FLOAT_NUMBER to state 52


State 40:
23: goto_statement -> GOTO BBNUM  . ';' 
  0:   On ';' to state 53


State 41:
21: assignment_statement -> variable ASSIGN_OP  . expression ';' 
  0:   On expression to state 54
  1:   On arithmetic_expression to state 44
  2:   On relational_expression to state 55
  3:   On SUB_OP to state 45
  4:   On variable_or_constant_typecast to state 46
  5:   On '(' to state 47
  6:   On variable_or_constant to state 48
  7:   On variable to state 49
  8:   On constant to state 50
  9:   On NAME to state 37
  10:   On INTEGER_NUMBER to state 51
  11:   On FLOAT_NUMBER to state 52


State 42:
22: if_else_statement -> IF '(' relational_expression  . ')' goto_statement ELSE goto_statement 
31: expression -> relational_expression  . 
  0:   On ')' to state 56
  Reduce by 31: expression -> relational_expression  . 


State 43:
24: relational_expression -> expression  . eq expression 
25: relational_expression -> expression  . ne expression 
26: relational_expression -> expression  . le expression 
27: relational_expression -> expression  . ge expression 
28: relational_expression -> expression  . lt expression 
29: relational_expression -> expression  . gt expression 
  0:   On eq to state 57
  1:   On ne to state 58
  2:   On le to state 59
  3:   On ge to state 60
  4:   On lt to state 61
  5:   On gt to state 62


State 44:
30: expression -> arithmetic_expression  . 
33: arithmetic_expression -> arithmetic_expression  . ADD_OP arithmetic_expression 
34: arithmetic_expression -> arithmetic_expression  . SUB_OP arithmetic_expression 
35: arithmetic_expression -> arithmetic_expression  . MULT_OP arithmetic_expression 
36: arithmetic_expression -> arithmetic_expression  . DIV_OP arithmetic_expression 
  0:   On ADD_OP to state 63
  1:   On SUB_OP to state 64
  2:   On MULT_OP to state 65
  3:   On DIV_OP to state 66
  Reduce by 30: expression -> arithmetic_expression  . 


State 45:
32: arithmetic_expression -> SUB_OP  . variable_or_constant_typecast 
  0:   On variable_or_constant_typecast to state 67
  1:   On '(' to state 47
  2:   On variable_or_constant to state 48
  3:   On variable to state 49
  4:   On constant to state 50
  5:   On NAME to state 37
  6:   On INTEGER_NUMBER to state 51
  7:   On FLOAT_NUMBER to state 52


State 46:
37: arithmetic_expression -> variable_or_constant_typecast  . 
  Reduce by 37: arithmetic_expression -> variable_or_constant_typecast  . 


State 47:
38: variable_or_constant_typecast -> '('  . FLOAT ')' variable_or_constant 
39: variable_or_constant_typecast -> '('  . DOUBLE ')' variable_or_constant 
40: variable_or_constant_typecast -> '('  . INTEGER ')' variable_or_constant 
44: variable_or_constant -> '('  . arithmetic_expression ')' 
45: variable_or_constant -> '('  . relational_expression ')' 
  0:   On FLOAT to state 68
  1:   On DOUBLE to state 69
  2:   On INTEGER to state 70
  3:   On arithmetic_expression to state 71
  4:   On relational_expression to state 72
  5:   On SUB_OP to state 45
  6:   On variable_or_constant_typecast to state 46
  7:   On expression to state 43
  8:   On '(' to state 47
  9:   On variable_or_constant to state 48
  10:   On variable to state 49
  11:   On constant to state 50
  12:   On NAME to state 37
  13:   On INTEGER_NUMBER to state 51
  14:   On FLOAT_NUMBER to state 52


State 48:
41: variable_or_constant_typecast -> variable_or_constant  . 
  Reduce by 41: variable_or_constant_typecast -> variable_or_constant  . 


State 49:
42: variable_or_constant -> variable  . 
  Reduce by 42: variable_or_constant -> variable  . 


State 50:
43: variable_or_constant -> constant  . 
  Reduce by 43: variable_or_constant -> constant  . 


State 51:
47: constant -> INTEGER_NUMBER  . 
  Reduce by 47: constant -> INTEGER_NUMBER  . 


State 52:
48: constant -> FLOAT_NUMBER  . 
  Reduce by 48: constant -> FLOAT_NUMBER  . 


State 53:
23: goto_statement -> GOTO BBNUM ';'  . 
  Reduce by 23: goto_statement -> GOTO BBNUM ';'  . 


State 54:
21: assignment_statement -> variable ASSIGN_OP expression  . ';' 
24: relational_expression -> expression  . eq expression 
25: relational_expression -> expression  . ne expression 
26: relational_expression -> expression  . le expression 
27: relational_expression -> expression  . ge expression 
28: relational_expression -> expression  . lt expression 
29: relational_expression -> expression  . gt expression 
  0:   On ';' to state 73
  1:   On eq to state 57
  2:   On ne to state 58
  3:   On le to state 59
  4:   On ge to state 60
  5:   On lt to state 61
  6:   On gt to state 62


State 55:
31: expression -> relational_expression  . 
  Reduce by 31: expression -> relational_expression  . 


State 56:
22: if_else_statement -> IF '(' relational_expression ')'  . goto_statement ELSE goto_statement 
  0:   On goto_statement to state 74
  1:   On GOTO to state 35


State 57:
24: relational_expression -> expression eq  . expression 
  0:   On expression to state 75
  1:   On arithmetic_expression to state 44
  2:   On relational_expression to state 55
  3:   On SUB_OP to state 45
  4:   On variable_or_constant_typecast to state 46
  5:   On '(' to state 47
  6:   On variable_or_constant to state 48
  7:   On variable to state 49
  8:   On constant to state 50
  9:   On NAME to state 37
  10:   On INTEGER_NUMBER to state 51
  11:   On FLOAT_NUMBER to state 52


State 58:
25: relational_expression -> expression ne  . expression 
  0:   On expression to state 76
  1:   On arithmetic_expression to state 44
  2:   On relational_expression to state 55
  3:   On SUB_OP to state 45
  4:   On variable_or_constant_typecast to state 46
  5:   On '(' to state 47
  6:   On variable_or_constant to state 48
  7:   On variable to state 49
  8:   On constant to state 50
  9:   On NAME to state 37
  10:   On INTEGER_NUMBER to state 51
  11:   On FLOAT_NUMBER to state 52


State 59:
26: relational_expression -> expression le  . expression 
  0:   On expression to state 77
  1:   On arithmetic_expression to state 44
  2:   On relational_expression to state 55
  3:   On SUB_OP to state 45
  4:   On variable_or_constant_typecast to state 46
  5:   On '(' to state 47
  6:   On variable_or_constant to state 48
  7:   On variable to state 49
  8:   On constant to state 50
  9:   On NAME to state 37
  10:   On INTEGER_NUMBER to state 51
  11:   On FLOAT_NUMBER to state 52


State 60:
27: relational_expression -> expression ge  . expression 
  0:   On expression to state 78
  1:   On arithmetic_expression to state 44
  2:   On relational_expression to state 55
  3:   On SUB_OP to state 45
  4:   On variable_or_constant_typecast to state 46
  5:   On '(' to state 47
  6:   On variable_or_constant to state 48
  7:   On variable to state 49
  8:   On constant to state 50
  9:   On NAME to state 37
  10:   On INTEGER_NUMBER to state 51
  11:   On FLOAT_NUMBER to state 52


State 61:
28: relational_expression -> expression lt  . expression 
  0:   On expression to state 79
  1:   On arithmetic_expression to state 44
  2:   On relational_expression to state 55
  3:   On SUB_OP to state 45
  4:   On variable_or_constant_typecast to state 46
  5:   On '(' to state 47
  6:   On variable_or_constant to state 48
  7:   On variable to state 49
  8:   On constant to state 50
  9:   On NAME to state 37
  10:   On INTEGER_NUMBER to state 51
  11:   On FLOAT_NUMBER to state 52


State 62:
29: relational_expression -> expression gt  . expression 
  0:   On expression to state 80
  1:   On arithmetic_expression to state 44
  2:   On relational_expression to state 55
  3:   On SUB_OP to state 45
  4:   On variable_or_constant_typecast to state 46
  5:   On '(' to state 47
  6:   On variable_or_constant to state 48
  7:   On variable to state 49
  8:   On constant to state 50
  9:   On NAME to state 37
  10:   On INTEGER_NUMBER to state 51
  11:   On FLOAT_NUMBER to state 52


State 63:
33: arithmetic_expression -> arithmetic_expression ADD_OP  . arithmetic_expression 
  0:   On arithmetic_expression to state 81
  1:   On SUB_OP to state 45
  2:   On variable_or_constant_typecast to state 46
  3:   On '(' to state 47
  4:   On variable_or_constant to state 48
  5:   On variable to state 49
  6:   On constant to state 50
  7:   On NAME to state 37
  8:   On INTEGER_NUMBER to state 51
  9:   On FLOAT_NUMBER to state 52


State 64:
34: arithmetic_expression -> arithmetic_expression SUB_OP  . arithmetic_expression 
  0:   On arithmetic_expression to state 82
  1:   On SUB_OP to state 45
  2:   On variable_or_constant_typecast to state 46
  3:   On '(' to state 47
  4:   On variable_or_constant to state 48
  5:   On variable to state 49
  6:   On constant to state 50
  7:   On NAME to state 37
  8:   On INTEGER_NUMBER to state 51
  9:   On FLOAT_NUMBER to state 52


State 65:
35: arithmetic_expression -> arithmetic_expression MULT_OP  . arithmetic_expression 
  0:   On arithmetic_expression to state 83
  1:   On SUB_OP to state 45
  2:   On variable_or_constant_typecast to state 46
  3:   On '(' to state 47
  4:   On variable_or_constant to state 48
  5:   On variable to state 49
  6:   On constant to state 50
  7:   On NAME to state 37
  8:   On INTEGER_NUMBER to state 51
  9:   On FLOAT_NUMBER to state 52


State 66:
36: arithmetic_expression -> arithmetic_expression DIV_OP  . arithmetic_expression 
  0:   On arithmetic_expression to state 84
  1:   On SUB_OP to state 45
  2:   On variable_or_constant_typecast to state 46
  3:   On '(' to state 47
  4:   On variable_or_constant to state 48
  5:   On variable to state 49
  6:   On constant to state 50
  7:   On NAME to state 37
  8:   On INTEGER_NUMBER to state 51
  9:   On FLOAT_NUMBER to state 52


State 67:
32: arithmetic_expression -> SUB_OP variable_or_constant_typecast  . 
  Reduce by 32: arithmetic_expression -> SUB_OP variable_or_constant_typecast  . 


State 68:
38: variable_or_constant_typecast -> '(' FLOAT  . ')' variable_or_constant 
  0:   On ')' to state 85


State 69:
39: variable_or_constant_typecast -> '(' DOUBLE  . ')' variable_or_constant 
  0:   On ')' to state 86


State 70:
40: variable_or_constant_typecast -> '(' INTEGER  . ')' variable_or_constant 
  0:   On ')' to state 87


State 71:
44: variable_or_constant -> '(' arithmetic_expression  . ')' 
33: arithmetic_expression -> arithmetic_expression  . ADD_OP arithmetic_expression 
34: arithmetic_expression -> arithmetic_expression  . SUB_OP arithmetic_expression 
35: arithmetic_expression -> arithmetic_expression  . MULT_OP arithmetic_expression 
36: arithmetic_expression -> arithmetic_expression  . DIV_OP arithmetic_expression 
30: expression -> arithmetic_expression  . 
  0:   On ')' to state 88
  1:   On ADD_OP to state 63
  2:   On SUB_OP to state 64
  3:   On MULT_OP to state 65
  4:   On DIV_OP to state 66
  Reduce by 30: expression -> arithmetic_expression  . 


State 72:
45: variable_or_constant -> '(' relational_expression  . ')' 
31: expression -> relational_expression  . 
  0:   On ')' to state 89
  Reduce by 31: expression -> relational_expression  . 


State 73:
21: assignment_statement -> variable ASSIGN_OP expression ';'  . 
  Reduce by 21: assignment_statement -> variable ASSIGN_OP expression ';'  . 


State 74:
22: if_else_statement -> IF '(' relational_expression ')' goto_statement  . ELSE goto_statement 
  0:   On ELSE to state 90


State 75:
24: relational_expression -> expression eq expression  . 
24: relational_expression -> expression  . eq expression 
25: relational_expression -> expression  . ne expression 
26: relational_expression -> expression  . le expression 
27: relational_expression -> expression  . ge expression 
28: relational_expression -> expression  . lt expression 
29: relational_expression -> expression  . gt expression 
  0 (removed by precedence):   On eq to state 57
  1 (removed by precedence):   On ne to state 58
  2:   On le to state 59
  3:   On ge to state 60
  4:   On lt to state 61
  5:   On gt to state 62
  Reduce by 24: relational_expression -> expression eq expression  . 


State 76:
25: relational_expression -> expression ne expression  . 
24: relational_expression -> expression  . eq expression 
25: relational_expression -> expression  . ne expression 
26: relational_expression -> expression  . le expression 
27: relational_expression -> expression  . ge expression 
28: relational_expression -> expression  . lt expression 
29: relational_expression -> expression  . gt expression 
  0 (removed by precedence):   On eq to state 57
  1 (removed by precedence):   On ne to state 58
  2:   On le to state 59
  3:   On ge to state 60
  4:   On lt to state 61
  5:   On gt to state 62
  Reduce by 25: relational_expression -> expression ne expression  . 


State 77:
26: relational_expression -> expression le expression  . 
24: relational_expression -> expression  . eq expression 
25: relational_expression -> expression  . ne expression 
26: relational_expression -> expression  . le expression 
27: relational_expression -> expression  . ge expression 
28: relational_expression -> expression  . lt expression 
29: relational_expression -> expression  . gt expression 
  0 (removed by precedence):   On eq to state 57
  1 (removed by precedence):   On ne to state 58
  2 (removed by precedence):   On le to state 59
  3 (removed by precedence):   On ge to state 60
  4 (removed by precedence):   On lt to state 61
  5 (removed by precedence):   On gt to state 62
  Reduce by 26: relational_expression -> expression le expression  . 


State 78:
27: relational_expression -> expression ge expression  . 
24: relational_expression -> expression  . eq expression 
25: relational_expression -> expression  . ne expression 
26: relational_expression -> expression  . le expression 
27: relational_expression -> expression  . ge expression 
28: relational_expression -> expression  . lt expression 
29: relational_expression -> expression  . gt expression 
  0 (removed by precedence):   On eq to state 57
  1 (removed by precedence):   On ne to state 58
  2 (removed by precedence):   On le to state 59
  3 (removed by precedence):   On ge to state 60
  4 (removed by precedence):   On lt to state 61
  5 (removed by precedence):   On gt to state 62
  Reduce by 27: relational_expression -> expression ge expression  . 


State 79:
28: relational_expression -> expression lt expression  . 
24: relational_expression -> expression  . eq expression 
25: relational_expression -> expression  . ne expression 
26: relational_expression -> expression  . le expression 
27: relational_expression -> expression  . ge expression 
28: relational_expression -> expression  . lt expression 
29: relational_expression -> expression  . gt expression 
  0 (removed by precedence):   On eq to state 57
  1 (removed by precedence):   On ne to state 58
  2 (removed by precedence):   On le to state 59
  3 (removed by precedence):   On ge to state 60
  4 (removed by precedence):   On lt to state 61
  5 (removed by precedence):   On gt to state 62
  Reduce by 28: relational_expression -> expression lt expression  . 


State 80:
29: relational_expression -> expression gt expression  . 
24: relational_expression -> expression  . eq expression 
25: relational_expression -> expression  . ne expression 
26: relational_expression -> expression  . le expression 
27: relational_expression -> expression  . ge expression 
28: relational_expression -> expression  . lt expression 
29: relational_expression -> expression  . gt expression 
  0 (removed by precedence):   On eq to state 57
  1 (removed by precedence):   On ne to state 58
  2 (removed by precedence):   On le to state 59
  3 (removed by precedence):   On ge to state 60
  4 (removed by precedence):   On lt to state 61
  5 (removed by precedence):   On gt to state 62
  Reduce by 29: relational_expression -> expression gt expression  . 


State 81:
33: arithmetic_expression -> arithmetic_expression ADD_OP arithmetic_expression  . 
33: arithmetic_expression -> arithmetic_expression  . ADD_OP arithmetic_expression 
34: arithmetic_expression -> arithmetic_expression  . SUB_OP arithmetic_expression 
35: arithmetic_expression -> arithmetic_expression  . MULT_OP arithmetic_expression 
36: arithmetic_expression -> arithmetic_expression  . DIV_OP arithmetic_expression 
  0 (removed by precedence):   On ADD_OP to state 63
  1 (removed by precedence):   On SUB_OP to state 64
  2:   On MULT_OP to state 65
  3:   On DIV_OP to state 66
  Reduce by 33: arithmetic_expression -> arithmetic_expression ADD_OP arithmetic_expression  . 


State 82:
34: arithmetic_expression -> arithmetic_expression SUB_OP arithmetic_expression  . 
33: arithmetic_expression -> arithmetic_expression  . ADD_OP arithmetic_expression 
34: arithmetic_expression -> arithmetic_expression  . SUB_OP arithmetic_expression 
35: arithmetic_expression -> arithmetic_expression  . MULT_OP arithmetic_expression 
36: arithmetic_expression -> arithmetic_expression  . DIV_OP arithmetic_expression 
  0 (removed by precedence):   On ADD_OP to state 63
  1 (removed by precedence):   On SUB_OP to state 64
  2:   On MULT_OP to state 65
  3:   On DIV_OP to state 66
  Reduce by 34: arithmetic_expression -> arithmetic_expression SUB_OP arithmetic_expression  . 


State 83:
35: arithmetic_expression -> arithmetic_expression MULT_OP arithmetic_expression  . 
33: arithmetic_expression -> arithmetic_expression  . ADD_OP arithmetic_expression 
34: arithmetic_expression -> arithmetic_expression  . SUB_OP arithmetic_expression 
35: arithmetic_expression -> arithmetic_expression  . MULT_OP arithmetic_expression 
36: arithmetic_expression -> arithmetic_expression  . DIV_OP arithmetic_expression 
  0 (removed by precedence):   On ADD_OP to state 63
  1 (removed by precedence):   On SUB_OP to state 64
  2 (removed by precedence):   On MULT_OP to state 65
  3 (removed by precedence):   On DIV_OP to state 66
  Reduce by 35: arithmetic_expression -> arithmetic_expression MULT_OP arithmetic_expression  . 


State 84:
36: arithmetic_expression -> arithmetic_expression DIV_OP arithmetic_expression  . 
33: arithmetic_expression -> arithmetic_expression  . ADD_OP arithmetic_expression 
34: arithmetic_expression -> arithmetic_expression  . SUB_OP arithmetic_expression 
35: arithmetic_expression -> arithmetic_expression  . MULT_OP arithmetic_expression 
36: arithmetic_expression -> arithmetic_expression  . DIV_OP arithmetic_expression 
  0 (removed by precedence):   On ADD_OP to state 63
  1 (removed by precedence):   On SUB_OP to state 64
  2 (removed by precedence):   On MULT_OP to state 65
  3 (removed by precedence):   On DIV_OP to state 66
  Reduce by 36: arithmetic_expression -> arithmetic_expression DIV_OP arithmetic_expression  . 


State 85:
38: variable_or_constant_typecast -> '(' FLOAT ')'  . variable_or_constant 
  0:   On variable_or_constant to state 91
  1:   On variable to state 49
  2:   On constant to state 50
  3:   On '(' to state 92
  4:   On NAME to state 37
  5:   On INTEGER_NUMBER to state 51
  6:   On FLOAT_NUMBER to state 52


State 86:
39: variable_or_constant_typecast -> '(' DOUBLE ')'  . variable_or_constant 
  0:   On variable_or_constant to state 93
  1:   On variable to state 49
  2:   On constant to state 50
  3:   On '(' to state 92
  4:   On NAME to state 37
  5:   On INTEGER_NUMBER to state 51
  6:   On FLOAT_NUMBER to state 52


State 87:
40: variable_or_constant_typecast -> '(' INTEGER ')'  . variable_or_constant 
  0:   On variable_or_constant to state 94
  1:   On variable to state 49
  2:   On constant to state 50
  3:   On '(' to state 92
  4:   On NAME to state 37
  5:   On INTEGER_NUMBER to state 51
  6:   On FLOAT_NUMBER to state 52


State 88:
44: variable_or_constant -> '(' arithmetic_expression ')'  . 
  Reduce by 44: variable_or_constant -> '(' arithmetic_expression ')'  . 


State 89:
45: variable_or_constant -> '(' relational_expression ')'  . 
  Reduce by 45: variable_or_constant -> '(' relational_expression ')'  . 


State 90:
22: if_else_statement -> IF '(' relational_expression ')' goto_statement ELSE  . goto_statement 
  0:   On goto_statement to state 95
  1:   On GOTO to state 35


State 91:
38: variable_or_constant_typecast -> '(' FLOAT ')' variable_or_constant  . 
  Reduce by 38: variable_or_constant_typecast -> '(' FLOAT ')' variable_or_constant  . 


State 92:
44: variable_or_constant -> '('  . arithmetic_expression ')' 
45: variable_or_constant -> '('  . relational_expression ')' 
  0:   On arithmetic_expression to state 71
  1:   On relational_expression to state 72
  2:   On SUB_OP to state 45
  3:   On variable_or_constant_typecast to state 46
  4:   On expression to state 43
  5:   On '(' to state 47
  6:   On variable_or_constant to state 48
  7:   On variable to state 49
  8:   On constant to state 50
  9:   On NAME to state 37
  10:   On INTEGER_NUMBER to state 51
  11:   On FLOAT_NUMBER to state 52


State 93:
39: variable_or_constant_typecast -> '(' DOUBLE ')' variable_or_constant  . 
  Reduce by 39: variable_or_constant_typecast -> '(' DOUBLE ')' variable_or_constant  . 


State 94:
40: variable_or_constant_typecast -> '(' INTEGER ')' variable_or_constant  . 
  Reduce by 40: variable_or_constant_typecast -> '(' INTEGER ')' variable_or_constant  . 


State 95:
22: if_else_statement -> IF '(' relational_expression ')' goto_statement ELSE goto_statement  . 
  Reduce by 22: if_else_statement -> IF '(' relational_expression ')' goto_statement ELSE goto_statement  . 



