
	.text 			# The .text assembler directive indicates
	.globl add		# The following is the code (as oppose to data)
add:				# .globl makes main know to the 
				# outside of the program.
# Prologue begins 
	sw $fp, 0($sp)		# Save the frame pointer
	sub $fp, $sp, 4		# Update the frame pointer

	sub $sp, $sp, 4		#Make space for the locals
# Prologue ends


label2:    	
	l.d $f2, 16($fp)
	l.d $f4, 24($fp)
	add.d $f6, $f2, $f4
	move.d $f0, $f6

return:    	

#Epilogue Begins
	add $sp, $sp, 4
	lw $fp, 0($sp)  
	jr        $31		# Jump back to the operating system.
# Epilogue Ends


	.text 			# The .text assembler directive indicates
	.globl main		# The following is the code (as oppose to data)
main:				# .globl makes main know to the 
				# outside of the program.
# Prologue begins 
	sw $fp, 0($sp)		# Save the frame pointer
	sub $fp, $sp, 4		# Update the frame pointer

	sub $sp, $sp, 28		# Make space for the locals
# Prologue ends


label2:    	
	li.d $f2, 2.00
	s.d $f2, -16($fp)
	li.d $f2, 3.00
	s.d $f2, -8($fp)
	l.d $f2, -8($fp)
	s.d $f2, 24($fp)
	l.d $f2, -16($fp)
	s.d $f2, 16($fp)
	call	add
	move.d $f2, $f0
	s.d $f2, 0($fp)

return:    	

# Epilogue Begins
	add $sp, $sp, 28
	lw $fp, 0($sp)  
	jr        $31		# Jump back to the operating system.
# Epilogue Ends

