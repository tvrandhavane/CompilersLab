  Procedure: fun
  Intermediate Code Statements

label2:    	
	iLoad.d:    	f2 <- 2.30
	store.d:    	a <- f2
	iLoad.d:    	f4 <- 3.20
	store.d:    	b <- f4
	iLoad.d:    	f6 <- 2.10
	div.d:    	f8 <- f4 , f6
	sub.d:    	f6 <- f8 , f2
	store.d:    	a <- f6
	mfc1:    	v0 <- f6
	move:    	v1 <- v0
	return
  Procedure: main
  Intermediate Code Statements

label2:    	
	call fun
	move:    	v0 <- v1
	store:    	b <- v0
	iLoad:    	t0 <- 3
	seq:    	t1 <- v0 , t0
	bne:    	t1 , zero : goto label3
	goto label4

label3:    	
	load:    	v0 <- b
	iLoad:    	t0 <- -2
	add:    	t1 <- v0 , t0
	store:    	iftmp0 <- t1
	goto label5

label4:    	
	iLoad:    	v0 <- 1
	store:    	iftmp0 <- v0

label5:    	
	load:    	v0 <- iftmp0
	store:    	a <- v0
	return
