  Procedure: add
  Intermediate Code Statements

label2:    	
	load.d:    	f2 <- a1
	load.d:    	f4 <- b1
	add.d:    	f6 <- f2 , f4
	move.d:    	f0 <- f6
	return
  Procedure: div
  Intermediate Code Statements

label2:    	
	load.d:    	f2 <- a1
	load.d:    	f4 <- b1
	div.d:    	f6 <- f2 , f4
	move.d:    	f0 <- f6
	return
  Procedure: main
  Intermediate Code Statements

label2:    	
	iLoad.d:    	f2 <- 2.00
	store.d:    	a <- f2
	iLoad.d:    	f4 <- 3.00
	store.d:    	b <- f4
	store.d:    	b1 <- f4
	store.d:    	a1 <- f2
	call add
	move.d:    	f2 <- f0
	store.d:    	c <- f2
	load.d:    	f4 <- b
	store.d:    	b1 <- f4
	load.d:    	f4 <- a
	store.d:    	a1 <- f4
	call sub
	move.d:    	f2 <- f0
	store.d:    	d <- f2
	load.d:    	f4 <- b
	store.d:    	b1 <- f4
	load.d:    	f4 <- a
	store.d:    	a1 <- f4
	call mul
	move.d:    	f2 <- f0
	store.d:    	e <- f2
	load.d:    	f4 <- b
	store.d:    	b1 <- f4
	load.d:    	f4 <- a
	store.d:    	a1 <- f4
	call div
	move.d:    	f2 <- f0
	store.d:    	f <- f2
	return
  Procedure: mul
  Intermediate Code Statements

label2:    	
	load.d:    	f2 <- a1
	load.d:    	f4 <- b1
	mul.d:    	f6 <- f2 , f4
	move.d:    	f0 <- f6
	return
  Procedure: sub
  Intermediate Code Statements

label2:    	
	load.d:    	f2 <- a1
	load.d:    	f4 <- b1
	sub.d:    	f6 <- f2 , f4
	move.d:    	f0 <- f6
	return
